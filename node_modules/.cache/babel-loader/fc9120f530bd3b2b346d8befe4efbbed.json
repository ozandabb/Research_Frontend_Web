{"ast":null,"code":"// import { toast } from 'react-toastify';\n// import { confirmAlert } from \"react-confirm-alert\";\nclass Config {\n  constructor() {\n    //backend server details\n    this.host = \"http://127.0.0.1:\"; // this.host = \"http://saleserp-env.eba-u2mkdt2x.us-east-2.elasticbeanstalk.com\";\n\n    this.port = \"8080\"; // this.port = \"\";\n\n    this.password = \"\";\n  } // for toast messages\n  //   setToast(msg){\n  //     toast.info( msg, {\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       draggable: true,\n  //     });\n  //   }\n  //Toast for error display\n  //   setErrorToast(msg){\n  //     toast.error( msg, {\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       draggable: true,\n  //     });\n  //   }\n  //delete confirm alert\n  //   setDeleteConfirmAlert(title , msg , confirm , cancel ){\n  //     confirmAlert({\n  //       title: title,\n  //       message: msg,\n  //       buttons: [\n  //         {\n  //           label: 'Yes',\n  //           onClick: () => confirm()\n  //         },\n  //         {\n  //           label: 'No',\n  //           onClick: () => cancel()\n  //         }\n  //       ]\n  //     });\n  //   }\n  //Validation alert\n  //   setValidateConfirmAlert(title , msg , confirm , cancel ){\n  //     confirmAlert({\n  //       title: title,\n  //       message: msg,\n  //       buttons: [\n  //         {\n  //           label: 'Yes',\n  //           onClick: () => confirm()\n  //         },\n  //         {\n  //           label: 'No',\n  //           onClick: () => cancel()\n  //         }\n  //       ]\n  //     });\n  //   }\n\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n}\n\nvar obj = new Config();\nexport default obj;","map":{"version":3,"sources":["/home/nipun/Workplace/git/Research Project/Research/Project/Source/Project_PMS/frontend/src/Controllers/Config.controllers.js"],"names":["Config","constructor","host","port","password","numberWithCommas","x","toString","replace","obj"],"mappings":"AAAA;AACA;AAEA,MAAMA,MAAN,CAAY;AACVC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,IAAL,GAAY,mBAAZ,CAFW,CAGX;;AACA,SAAKC,IAAL,GAAY,MAAZ,CAJW,CAKX;;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD,GARS,CAUV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,gBAAgB,CAACC,CAAD,EAAI;AAClB,WAAOA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,iCAArB,EAAwD,GAAxD,CAAP;AACH;;AAlEW;;AA6EZ,IAAIC,GAAG,GAAG,IAAIT,MAAJ,EAAV;AACA,eAAeS,GAAf","sourcesContent":["// import { toast } from 'react-toastify';\n// import { confirmAlert } from \"react-confirm-alert\";\n\nclass Config{\n  constructor(){\n    //backend server details\n    this.host = \"http://127.0.0.1:\";\n    // this.host = \"http://saleserp-env.eba-u2mkdt2x.us-east-2.elasticbeanstalk.com\";\n    this.port = \"8080\";\n    // this.port = \"\";\n    this.password = \"\";\n  }\n\n  // for toast messages\n//   setToast(msg){\n//     toast.info( msg, {\n//       hideProgressBar: true,\n//       closeOnClick: true,\n//       draggable: true,\n//     });\n//   }\n\n  //Toast for error display\n//   setErrorToast(msg){\n//     toast.error( msg, {\n//       hideProgressBar: true,\n//       closeOnClick: true,\n//       draggable: true,\n//     });\n//   }\n\n  //delete confirm alert\n//   setDeleteConfirmAlert(title , msg , confirm , cancel ){\n//     confirmAlert({\n//       title: title,\n//       message: msg,\n//       buttons: [\n//         {\n//           label: 'Yes',\n//           onClick: () => confirm()\n//         },\n//         {\n//           label: 'No',\n//           onClick: () => cancel()\n//         }\n//       ]\n//     });\n//   }\n\n  //Validation alert\n//   setValidateConfirmAlert(title , msg , confirm , cancel ){\n//     confirmAlert({\n//       title: title,\n//       message: msg,\n//       buttons: [\n//         {\n//           label: 'Yes',\n//           onClick: () => confirm()\n//         },\n//         {\n//           label: 'No',\n//           onClick: () => cancel()\n//         }\n//       ]\n//     });\n//   }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n\n\n\n\n\n\n\n}\n\nvar obj = new Config();\nexport default obj;"]},"metadata":{},"sourceType":"module"}