{"ast":null,"code":"import Axios from \"axios\";\nimport Config from \"../Config.controllers\";\n\nclass clientController {\n  constructor() {\n    this.addClient = async (data, token) => {\n      return await Axios.post(`${Config.host}${Config.port}${this.api.addClient}`, data, {\n        headers: {\n          'Authorization': `bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(Response => {\n        return { ...Response.data,\n          status: 200\n        };\n      }).catch(err => {\n        return { ...err,\n          status: 400\n        };\n      });\n    };\n\n    this.api = {\n      addClient: \"/api/user/register/client\" // getAllCustomer: \"/api/customer/all\",\n      // getOneCustByTCODE: \"/api/customer/tcode\",\n      // getOneUserByUSERNAME: \"/api/users/username\",\n      // UpdateCustomer: \"/api/customer/cutomer\",\n      // CutPromotions : \"/api/customer/add/promotions\",\n      // GetAllPromotions : \"/api/customer/promos\"\n\n    };\n  } //add a new client\n\n\n}\n\nvar UserObject = new clientController();\nexport default UserObject;","map":{"version":3,"sources":["/home/nipun/Workplace/git/Research Project/Research/Project/Source/Project_PMS/frontend/src/Controllers/ClientControllers/client.controller.js"],"names":["Axios","Config","clientController","constructor","addClient","data","token","post","host","port","api","headers","then","Response","status","catch","err","UserObject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,MAAMC,gBAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAE;AAAA,SAabC,SAba,GAaD,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AAC/B,aAAO,MAAMN,KAAK,CAACO,IAAN,CAAa,GAAEN,MAAM,CAACO,IAAK,GAAEP,MAAM,CAACQ,IAAK,GAAE,KAAKC,GAAL,CAASN,SAAU,EAA9D,EAAiEC,IAAjE,EACb;AAAEM,QAAAA,OAAO,EAAE;AAAE,2BAAkB,UAASL,KAAM,EAAnC;AAAsC,0BAAgB;AAAtD;AAAX,OADa,EAERM,IAFQ,CAEHC,QAAQ,IAAI;AACd,eAAO,EAAE,GAAGA,QAAQ,CAACR,IAAd;AAAqBS,UAAAA,MAAM,EAAG;AAA9B,SAAP;AACH,OAJQ,EAKRC,KALQ,CAKFC,GAAG,IAAI;AACV,eAAO,EAAE,GAAGA,GAAL;AAAWF,UAAAA,MAAM,EAAG;AAApB,SAAP;AACH,OAPQ,CAAb;AAQH,KAtBY;;AACT,SAAKJ,GAAL,GAAW;AACPN,MAAAA,SAAS,EAAE,2BADJ,CAEP;AACA;AACA;AACA;AACA;AACA;;AAPO,KAAX;AASH,GAXiB,CAalB;;;AAbkB;;AA4BtB,IAAIa,UAAU,GAAG,IAAIf,gBAAJ,EAAjB;AACA,eAAee,UAAf","sourcesContent":["import Axios from \"axios\";\nimport Config from \"../Config.controllers\";\n\nclass clientController{\n    constructor(){\n        this.api = {\n            addClient: \"/api/user/register/client\",\n            // getAllCustomer: \"/api/customer/all\",\n            // getOneCustByTCODE: \"/api/customer/tcode\",\n            // getOneUserByUSERNAME: \"/api/users/username\",\n            // UpdateCustomer: \"/api/customer/cutomer\",\n            // CutPromotions : \"/api/customer/add/promotions\",\n            // GetAllPromotions : \"/api/customer/promos\"\n        };\n    }\n\n    //add a new client\n    addClient = async (data, token) => {\n        return await Axios.post( `${Config.host}${Config.port}${this.api.addClient}`, data,\n        { headers: { 'Authorization': `bearer ${token}`, 'Content-Type': 'application/json', }} )\n            .then(Response => {\n                return { ...Response.data , status : 200 }\n            })\n            .catch(err => {\n                return { ...err , status : 400 }\n            });\n    }\n\n\n}\n\nvar UserObject = new clientController();\nexport default UserObject;"]},"metadata":{},"sourceType":"module"}