{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nipun/Workplace/git/Research Project/Research/Project/Source/Project_PMS/frontend/src/RootRouter.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport indexRoutes from './Routes/index.routes';\nimport AdminRoutes from './Routes/Admin.routes';\nimport ClientRoutes from './Routes/Client.routes';\nimport StaffRoutes from './Routes/Staff.routes';\nimport StudentRoutes from './Routes/Student.routes';\n\nclass RootRouter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.router = () => {\n      let routes = indexRoutes;\n      let checkSignedIn = this.props.auth.isAuthenticated;\n      let role = checkSignedIn ? this.props.auth.user.loginRole : \"\";\n      console.log(\"login role? \", role);\n\n      if (checkSignedIn === true) {\n        routes = [...routes];\n      }\n\n      if (checkSignedIn === true && role === 1) {\n        routes = [...AdminRoutes, ...routes];\n      }\n\n      if (checkSignedIn === true && role === 2) {\n        routes = [...StudentRoutes, ...routes];\n      }\n\n      if (checkSignedIn === true && role === 3) {\n        routes = [...StaffRoutes, ...routes];\n      }\n\n      if (checkSignedIn === true && role === 4) {\n        routes = [...ClientRoutes, ...routes];\n      }\n\n      return routes;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: this.router().map((prop, key) => {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: prop.path,\n            component: props => /*#__PURE__*/_jsxDEV(prop.component, { ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, this),\n            exact: prop.exact ? true : false\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this) // <Router >\n    //     <Route path=\"/\" component={login} />\n    // </Router>\n    ;\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth || {}\n});\n\nexport default connect(mapStateToProps)(RootRouter); // export default RootRouter;","map":{"version":3,"sources":["/home/nipun/Workplace/git/Research Project/Research/Project/Source/Project_PMS/frontend/src/RootRouter.js"],"names":["React","BrowserRouter","Router","Route","Switch","connect","indexRoutes","AdminRoutes","ClientRoutes","StaffRoutes","StudentRoutes","RootRouter","Component","router","routes","checkSignedIn","props","auth","isAuthenticated","role","user","loginRole","console","log","render","map","prop","key","path","exact","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAuB,aAAvB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;AAGA,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAErCC,MAFqC,GAE5B,MAAM;AACX,UAAIC,MAAM,GAAGR,WAAb;AAEA,UAAIS,aAAa,GAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,eAArC;AACA,UAAIC,IAAI,GAAIJ,aAAD,GAAkB,KAAKC,KAAL,CAAWC,IAAX,CAAgBG,IAAhB,CAAqBC,SAAvC,GAAmD,EAA9D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,IAA5B;;AAEA,UAAGJ,aAAa,KAAK,IAArB,EAA2B;AACvBD,QAAAA,MAAM,GAAG,CAAE,GAAGA,MAAL,CAAT;AACH;;AACD,UAAGC,aAAa,KAAK,IAAlB,IAA0BI,IAAI,KAAK,CAAtC,EAAwC;AACpCL,QAAAA,MAAM,GAAG,CAAE,GAAGP,WAAL,EAAkB,GAAGO,MAArB,CAAT;AACH;;AACD,UAAGC,aAAa,KAAK,IAAlB,IAA0BI,IAAI,KAAK,CAAtC,EAAwC;AACpCL,QAAAA,MAAM,GAAG,CAAE,GAAGJ,aAAL,EAAoB,GAAGI,MAAvB,CAAT;AACH;;AACD,UAAGC,aAAa,KAAK,IAAlB,IAA0BI,IAAI,KAAK,CAAtC,EAAwC;AACpCL,QAAAA,MAAM,GAAG,CAAE,GAAGL,WAAL,EAAkB,GAAGK,MAArB,CAAT;AACH;;AACD,UAAGC,aAAa,KAAK,IAAlB,IAA0BI,IAAI,KAAK,CAAtC,EAAwC;AACpCL,QAAAA,MAAM,GAAG,CAAE,GAAGN,YAAL,EAAmB,GAAGM,MAAtB,CAAT;AACH;;AAED,aAAOA,MAAP;AACH,KA1BoC;AAAA;;AA4BrCU,EAAAA,MAAM,GAAE;AACJ,wBACI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,kBACE,KAAKX,MAAL,GAAcY,GAAd,CAAkB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,8BACA,QAAC,KAAD;AACI,YAAA,IAAI,EAAED,IAAI,CAACE,IADf;AAGI,YAAA,SAAS,EAAGZ,KAAD,iBAAW,QAAC,IAAD,CAAM,SAAN,OAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAH1B;AAII,YAAA,KAAK,EAAEU,IAAI,CAACG,KAAL,GAAa,IAAb,GAAoB;AAJ/B,aAESF,GAFT;AAAA;AAAA;AAAA;AAAA,kBADA;AASH,SAVC;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,CAgBI;AACA;AACA;AAlBJ;AAoBH;;AAjDoC;;AAqDzC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9Bd,EAAAA,IAAI,EAAGc,KAAK,CAACd,IAAN,IAAc;AADS,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACyB,eAAD,CAAP,CAAyBnB,UAAzB,CAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { connect} from 'react-redux';\n\nimport indexRoutes from './Routes/index.routes';\nimport AdminRoutes from './Routes/Admin.routes';\nimport ClientRoutes from './Routes/Client.routes';\nimport StaffRoutes from './Routes/Staff.routes';\nimport StudentRoutes from './Routes/Student.routes';\n\n\nclass RootRouter extends React.Component {\n\n    router = () => {\n        let routes = indexRoutes;\n\n        let checkSignedIn =  this.props.auth.isAuthenticated;\n        let role = (checkSignedIn) ? this.props.auth.user.loginRole : \"\";\n        console.log(\"login role? \", role);\n\n        if(checkSignedIn === true ){\n            routes = [ ...routes ];\n        }\n        if(checkSignedIn === true && role === 1){\n            routes = [ ...AdminRoutes, ...routes ];\n        }\n        if(checkSignedIn === true && role === 2){\n            routes = [ ...StudentRoutes, ...routes ];\n        }\n        if(checkSignedIn === true && role === 3){\n            routes = [ ...StaffRoutes, ...routes ];\n        }\n        if(checkSignedIn === true && role === 4){\n            routes = [ ...ClientRoutes, ...routes ];\n        }\n\n        return routes;\n    } \n\n    render(){\n        return(\n            <Router >\n                <Switch>\n                { this.router().map((prop, key) => {\n                    return (\n                    <Route\n                        path={prop.path}\n                        key={key}\n                        component={(props) => <prop.component    {...props} />}\n                        exact={prop.exact ? true : false}\n\n                    />\n                    );\n                })}\n                </Switch>\n            </Router>\n            // <Router >\n            //     <Route path=\"/\" component={login} />\n            // </Router>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    auth : state.auth || {} ,\n  });\n\nexport default connect(mapStateToProps)(RootRouter);\n\n// export default RootRouter;"]},"metadata":{},"sourceType":"module"}